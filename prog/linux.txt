# Links
https://white55.ru/cmd-sh.html  # Сответствие консольных команд Windows и Linux
https://stepik.org/course/73/promo  # Курс введение в linux

# Запуск/выход терминалом
Ctrl+Alt+F1…Ctrl+Alt+F6  # Для работы через консоль
Ctrl+Alt+F7  # Для возврата в графический интерфейс  
Ctrl+Alt+T  # Для запуска терминала
Alt+F2  # Запуск из окна запуска приложений

# Завершение работы из консоли
poweroff  # Завершает работу системы Linux и оключает питание
halt  # Завершение работу системы, но не отключает питание
reboot  # Перезагружает систему
shutdown  # Обеспечивает более гибкое завершение работы

# Структура команды в Bash
Имя команды
	Определяет, какая программа или встроенная функция Bash должна быть выполнена
    Например, ls, mkdir
Опции/Флаги
    Однобуквенные или многосимвольные опции, обычно предваряемые - (например, -l в ls -l)
    Опции изменяют поведение команды
Аргументы
    Данные, над которыми должна выполняться команда
    Это могут быть пути к файлам, значения или другие данные, необходимые для выполнения команды
    Например, в mkdir newdir, newdir является аргументом
Перенаправление ввода/вывода
    Используется для изменения стандартных потоков ввода, вывода и ошибок
    Например, > используется для перенаправления вывода команды в файл
Конвейер (Pipe)
    Символ | используется для передачи вывода одной команды в качестве ввода другой команды

# Работа в терминале
sudo  # Права администратора
clear  # Очистка терминала
echo  # Вывод сообщения на экран
jobs  # Команда отображает состояние заданий, запущенных в текущем окне терминала
man  # справка по команде

# Текстовые редакторы
nano
vim
most
sed
joe
pico
mcedit

# Работа с файлами и каталогами
pwd  # Путь текущей директории
cat  # Вывод на экран содержимого файла c начала
tac  # Вывод на экран содержимого файла c конца
mv  # Переименование и перемещение файлов
cp  # Скопировать файл
ls  # Отображение списка файлов и каталогов
ll -h  # Подробный вывод содержимого в каталоге
cd  # Изменение каталога
rm  # Удаление файла
rm -r(R)  # Рекурсивное удаление непустого каталога
rmdir  # Удаление пустого каталога
more  # открываем файл, позволяет прокручивать его сверху вниз
less  # открывает файл, умеет искать по тексту, и прокрутичвать вверх и вниз
most  # открывает файл, умеет открывать несколько файлов, сплитить экран, редактировать текст
find  # поиск файлов
locate  # утилита для быстрого поиска файлов
touch  # cоздать файл
mkdir  # Создать каталог
ln  # Создание символьной ссылки на файл или каталог. Пример - ln path/to/file linkname
chmod  # Изменение атрибутов файла
chown  # утилита для смены пользователя/группы
wc  # подсчет количества строк в файле
which  # Производит быстрый поиск программы (исполнимого файла)
cmp  # Сравнение файлов
diff  # Сравнение 2х файлов
diff3  # Сравнение 3х файлов
column  # Разбивка текста на колонки
expand  # Замена символов табуляции пробелами
unexpand  # Заменяет последовательные пробелы символами табуляции
fmt  # Форматирование текста
split  # Разделяет файл на части

# Управление системой
ps  # Отобразить список процессов
kill  # Уничтожить процесс
top  # показывает информацию о запущенных процессах, и системе в целом
htop  # продвинутый вариант top
iostat  # утилита для оценки интенсивности ввода/вывода
df  # покажет количество места на дисках
du  # покажет вес файлов в директории, поможет найти самые тяжелые

# Создание файла
https://losst.ru/kak-sozdat-fajl-v-terminale
> файл

# Типы файлов и каталогов
https://losst.ru/tipy-fajlov-v-linux
-  # Обычные файлы: текстовые, исполняемые, изображения, архивы
d  # Каталоги - объединяют другие файлы в группы для удобного доступа
l  # Ссылки - указывают на другие файлы, похожи на ярлыки в windows. Бывают: жесткие и символические
ln -s path/to/file linkname  # Создать символическую ссылку
ln path/to/file linkname  # Создание жесткой ссылки

# Ввод/вывод
http://xgu.ru/wiki/Стандартные_потоки_ввода/вывода
https://stackoverflow.com/questions/3385201/confused-about-stdin-stdout-and-stderr
stdin  # стандартный поток ввода
stdout  # стандартный поток вывода
stderr  # стандартный поток вывода ошибок
< файл  # Из файла в stdin
> файл  # Из stdout в файл (с перезаписью)
2> файл  # stderr в файл (с перезаписью)
>>файл или 2>>файл  # перенаправление с дозаписью
&>файл или >&файл или >файл 2>&1  # stdout и stderr в файл
|  # для перенаправления между процессами

# Логи
https://habr.com/ru/post/332502/
/var/log
/var/log/syslog или /var/log/messages  # глобальный системный журнал
/var/log/auth.log или /var/log/secure  # информация об авторизации пользователей
/var/log/dmesg  # драйвера устройств
/var/log/audit  # записи, созданные службой аудита auditd
/var/log/boot.log  # информация о загрузке системы
/var/log/cron  # отчет службы crond
/var/log/cups  # принтеры

# cat - прочитать файлы и напечатать результат
https://losst.ru/komanda-cat-linux
cat опции файл[ файл]  # Использование
-b  # нумеровать только непустые строки
-E  # показывать символ $ в конце каждой строки
-n  # нумеровать все строки
-s  # удалять пустые повторяющиеся строки
-T  # отображать табуляции в виде ^I

# tail - утилиты для работы с текстом
https://losst.ru/komanda-tail-linux
tail  # по умолчанию утилита выводит десять последних строк из файла
tail опции файл[ файл]  # Использование
-c  # выводить указанное количество байт с конца файла
-f  # обновлять информацию по мере появления новых строк в файле
-n  # выводить указанное количество строк из конца файла
--pid  # используется с опцией -f, позволяет завершить работу утилиты, когда завершится указанный процесс
-q  # не выводить имена файлов
--retry  # повторять попытки открыть файл, если он недоступен
-v  # выводить подробную информацию о файле

# head - печатает первые N строк из файла (по умолчанию 10)
head опции файл  # Использование
-c  # напечатать N байтов
-n  # напечатать N строк

# less - открывает файл для просмотра
less файл  # Использование
j/k или стрелочи  # Перемещение по файлу
/pattern  # поиск вперед (pattern - регулярное выражение)
?pattern  # поиск назад (pattern - регулярное выражение)
n  # повторить последний поиск
N  # повторить последний поиск в обратном направлении
/&  # Отображать только найденные строки (может зависнуть на большом файле)

# grep - поиск в файлах/файлов по паттерну
https://losst.ru/gerp-poisk-vnutri-fajlov-v-linux
grep [опции] шаблон [имя файла...]  # Пример - grep "text" file.txt
-m  # Остановить после m вхождений
-c  # Подсчитать количество вхождений шаблона
-i  # Не учитывать регистр
-l  # Отобразить только имена файлов, в которых найден шаблон
-n  # Показывать номер строки в файле
-v  # Инвертировать поиск, выдавать все строки кроме тех, что содержат шаблон
-e  # Использовать регулярные выражения при поиске
-r  # Рекурсивный поиск по всем файлам в указанной директории
-E  # Использует расширенные регулярные выражения
-An  # Показать вхождение и n строк до него
-Bn  # Показать вхождение и n строк после него
-Cn  # Показать n строк до и после вхождения
tail -f file | grep -e "regexp" -- отслеживание файла по регулярному выражению

# find - утилита для поиска файлов
https://losst.ru/komanda-find-v-linux
find [папка] [параметры] критерий шаблон [действие]  # Пример - find /home -name "file.txt"
-maxdepth  # Максимальная глубина поиска по подкаталогам (1 для поиска только в текущем каталоге)
-print  # Выводить полные имена файлов
-type f  # Искать только файлы
-type d  # Искать только папки
-name  # Поиск файлов по имени
-perm  # Поиск файлов по режиму доступа
-user  # Поиск файлов по владельцу
-group  # Поиск по группе
-mtime  # Поиск по времени модификации файла
-atime  # Поиск файлов по дате последнего чтения
-nogroup  # Поиск файлов, не принадлежащих ни одной группе
-nouser  # Поиск файлов без владельцев
-newer  # Найти файлы новее чем указанный
-size  # Поиск файлов в Linux по их размеру
# find - examples
find foo.txt  # Файл foo.txt в текущей папке
find .  # Все файлы в текущей папке
find . -name *.log  # Все файлы оканчивающиеся на .log
find ~/ -name *.log  # Все файлы оканчивающиеся на .log в домашней директории
find . -exec ls {} \;  # Найти все файлы в текущей папке и применить к ним ls

# locate - утилита для быстрого поиска файлов
https://www.howtoforge.com/linux-locate-command/
locate [имя-файла]  # Поиск файла с именем
updatedb  # Обновление базы данных

# ls - отображение списка файлов и каталогов
ls -l (или ll)  # Посмотреть подробную информацию о файлах
ls -i  # Вывести номера inode файлов
ls -a  # Отображение всех файлов, включая скрытые файлы
ls -R  # Показывает содержимое внутри каталогов
ls -h  # Показывает размер файлов в удобочитаемом формате (например, КБ, МБ)

# Псевдонимы
alias foo='ls'  # Теперь foo выполняется также как ls

# ps - утилита для просмотра состояния запущенных процессов
-e  # показывать все процессы
-a  # самые часто запрашиваемые
-f  # показать PPID
ps o ppid PID  # найти PPID по PID
ps aux  # Показать все запущенные процессы

# kill - утилита для отправки сигнала процессу
kill [num] PID  # пошлет сигнал процессу
kill -l  # выведет список доступных сигналов (так ;t man signal)

# df - покажет количество места на дисках
-h  # посмотреть, сколько памяти доступно на каких дисках
-i  # посмотреть inode файловой системы

# du - покажет вес файлов в директории, поможет найти самые тяжелые
du -h  # посмотреть, сколько весит каждый файл
du -h -d num  # посмотреть inode файловой системы

# ping - используется для проверки доступности узла в сети
ping -c [количество] [адрес]  # Отправляет определенное количество пакетов и затем останавливается
ping -i [интервал] [адрес]  # Задает интервал между отправкой пакетов в секундах
ping -t [TTL] [адрес]  # Устанавливает значение Time-To-Live для пакетов

# curl - используется для передачи данных с или на сервер, используя один из протоколов (HTTP, HTTPS, FTP и др.)
curl [URL]  # Получает содержимое по указанному URL
curl https://www.example.com  # Выводит HTML содержимое страницы

# sed - редактор
https://habr.com/ru/company/ruvds/blog/327530/

# awk - утилита для работы с текстом
https://github.com/TheMozg/awk-raycaster
https://habr.com/ru/company/ruvds/blog/327754/


