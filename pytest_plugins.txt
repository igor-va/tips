# Plugins (138)
https://docs.pytest.org/en/latest/plugins.html
https://pypi.python.org  # Search to enter “pytest,” “pytest-,” or “-pytest”
https://github.com/pytest-dev   
pytest-json  # Отчет результатов тестов в формате json
allure-pytest  # Для allure
jenkins  # Continuous integration (CI) systems such as Jenkins are frequently used to launch test suites after each code commit (197)

# С какими python модулями pytest может работать совместно
pdb  # Module debugger in the standard library (​pytest​​ ​​​​--pdb) (177)
unittest.mock  # To swap out pieces of the system to isolate bits of our code under test from the rest of the system (186)
unittest  # Framework built into the Python standard library (203)

# pytest-html - отчет результатов тестов в формате html (226)
https://pytest-html.readthedocs.io/en/latest/
https://pypi.org/project/pytest-html/
--html=report.html

# pytest-cov - code coverage is a measurement of what percentage of the code under test is being tested by a test suite (pytest​​ ​​--cov=/path/to/code) (181)
https://coverage.readthedocs.io/en/coverage-5.4/
https://pytest-cov.readthedocs.io/en/latest/

# mock & pytest-mock - thin-wrapper around the mock package for easier use with pytest (186)
https://docs.python.org/dev/library/unittest.mock.html
https://pypi.org/project/pytest-mock/

# tox - run your complete suite of tests in multiple environments (193)
https://tox.readthedocs.io/en/latest/

# pytest-repeat - run tests more than once (219)
https://pypi.org/project/pytest-repeat/
--count  # With the pytest-repeat plugin, you can use --count to run everything twice

# pytest-xdist - для паралельного запуска тестов (220)
https://pypi.org/project/pytest-xdist/
-n  # numprocesses to run each test in a subprocess
-n auto  # to automatically detect the number of CPUs on the system

# pytest-timeout - it allows you pass a timeout period on the command line or mark individual tests with timeout periods in seconds (221)
https://pypi.org/project/pytest-timeout/
​​--timeout=0.5  # Example

# pytest-instafail - See Details of Failures and Errors as They Happen (223)
https://pypi.org/project/pytest-instafail/
--instafail​​ 

# pytest-sugar - Instafail + Colors + Progress Bar (224)
https://pypi.org/project/pytest-sugar/

# pytest-emoji - allows you to replace all of the test status characters with emojis (225)
https://pypi.org/project/pytest-emoji/
--emoji

# pytest-pycodestyle - command-line tool can be used to check Python source code to see if it complies with PEP 8 (229)
https://pypi.org/project/pytest-pycodestyle/

# pytest-pep8 (229)
https://pypi.org/project/pytest-pep8/

# pytest-flake8 (229)
https://pypi.org/project/pytest-flake8/

# pytest-selenium (230)
https://pypi.org/project/pytest-selenium/

# pytest-django (230)
https://pypi.org/project/pytest-django/

# pytest-flask (230)
https://pypi.org/project/pytest-flask/


































